/*
      w w w
      w w w
      w w w
r r r g g g b b b o o o
r r r g g g b b b o o o
r r r g g g b b b o o o
      y y y
      y y y
      y y y
 4
0123
 5

          0  1  2
          3  4  5
          6  7  8
 9 10 11|12 13 14|15 16 17|18 19 20
21 22 23|24 25 26|27 28 29|30 31 32
33 34 35|36 37 38|39 40 41|42 43 44
         45 46 47
         48 49 50
         51 52 53
*/

#include <algorithm>
#include <array>
#include <iostream>
#include <vector>
#include <stack>
using namespace std;
using CUBE = array<char, 54>;
using PII = pair<int, int>;
stack<PII> stp;
int ans = -1, clen;
char cuid[6] = {'r', 'g', 'b', 'o', 'w', 'y'};
int re[6][9] = {{9, 10, 11, 21, 22, 23, 33, 34, 35}, {12, 13, 14, 24, 25, 26, 36, 37, 38}, {15, 16, 17, 27, 28, 29, 39, 40, 41}, {18, 19, 20, 30, 31, 32, 42, 43, 44}, {0, 1, 2, 3, 4, 5, 6, 7, 8}, {45, 46, 47, 48, 49, 50, 51, 52, 53}};

int ocu[6][20] = {
    {0, 3, 6, 12, 24, 36, 45, 48, 51, 44, 32, 20, 9, 10, 11, 21, 23, 33, 34, 35},
    {6, 7, 8, 15, 27, 39, 47, 46, 45, 35, 23, 11, 12, 13, 14, 24, 26, 36, 37, 38},
    {8, 5, 2, 18, 30, 42, 53, 50, 47, 38, 26, 14, 15, 16, 17, 27, 29, 39, 40, 41},
    {2, 1, 0, 9, 21, 33, 51, 52, 53, 41, 29, 17, 18, 19, 20, 30, 32, 42, 43, 44},
    {20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 1, 2, 3, 5, 6, 7, 8},
    {33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53}};
int ro[6][2][20] = {{{44, 32, 20, 0, 3, 6, 12, 24, 36, 45, 48, 51, 33, 21, 9, 34, 10, 35, 23, 11},
                     {12, 24, 36, 45, 48, 51, 44, 32, 20, 0, 3, 6, 11, 23, 35, 10, 34, 9, 21, 33}},
                    {{35, 23, 11, 6, 7, 8, 15, 27, 39, 47, 46, 45, 36, 24, 12, 37, 13, 38, 26, 14},
                     {15, 27, 39, 47, 46, 45, 35, 23, 11, 6, 7, 8, 14, 26, 38, 13, 37, 12, 24, 36}},
                    {{38, 26, 14, 8, 5, 2, 18, 30, 42, 53, 50, 47, 39, 27, 15, 40, 16, 41, 29, 17},
                     {18, 30, 42, 53, 50, 47, 38, 26, 14, 8, 5, 2, 17, 29, 41, 16, 40, 15, 27, 39}},
                    {{41, 29, 17, 2, 1, 0, 9, 21, 33, 51, 52, 53, 42, 30, 18, 43, 19, 44, 32, 20},
                     {9, 21, 33, 51, 52, 53, 41, 29, 17, 2, 1, 0, 20, 32, 44, 19, 43, 18, 30, 42}},
                    {{11, 10, 9, 20, 19, 18, 17, 16, 15, 14, 13, 12, 6, 3, 0, 7, 1, 8, 5, 2},
                     {17, 16, 15, 14, 13, 12, 11, 10, 9, 20, 19, 18, 2, 5, 8, 1, 7, 0, 3, 6}},
                    {{42, 43, 44, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 48, 45, 52, 46, 53, 50, 47},
                     {36, 37, 38, 39, 40, 41, 42, 43, 44, 33, 34, 35, 47, 50, 53, 46, 52, 45, 48, 51}}};
bool reach(CUBE cu)
{
    for (int i = 0; i < 6; ++i)
    {
        char ch = cu[re[i][0]];
        for (int j = 1; j < 9; ++j)
            if (ch != cu[re[i][j]])
                return 0;
    }
    return 1;
}
CUBE rotate(int idx, int dir, CUBE cu)
{
    CUBE nc = cu;
    for (int i = 0; i < 20; ++i)
        nc[ocu[idx][i]] = cu[ro[idx][dir][i]];
    return nc;
}
void dfs(int cd, CUBE cu)
{
    if (ans != -1 || cd > clen)
        return;
    if (reach(cu))
    {
        ans = cd;
        return;
    }
    for (int i = 0; i < 6; ++i)
        for (int j = 0; j < 2; ++j)
        {
            CUBE nc = rotate(i, j, cu);
            dfs(cd + 1, nc);
            if (ans != -1)
            {
                stp.push(make_pair(i, j));
                return;
            }
        }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int T;
    cin >> T;
    while (T--)
    {
        ans = -1;
        CUBE cu;
        clen = 1;
        for (auto &i : cu)
            cin >> i;
        while (clen < 6)
        {
            dfs(0, cu);
            clen++;
        }
        cout << ans << endl;
        while(!stp.empty())
        {
            auto &i = stp.top();
            stp.pop();
            int t = i.second == 0 ? 1 : -1;
            cout << i.first << " " << t << endl;
        }
    }
    return 0;
}